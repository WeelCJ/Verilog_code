功能：从外部有规律的写1024位宽的数据进写模块，然后按128位宽写入DDR（异步）；
从外部输入读信号和首地址，从DDR连续的读数据128位，通过异步FIFO，以16位宽连续的输出。
vivado 2018.2版本
平台：ZCU102

用AXI总线直接调用ZCU102上PL端挂载的512M大小的DDR，花费了大概两周的时间，主要难点不在于读写模块和AXI-full总线，在于仿真不同于上板测试，
仿真需要根据MIG核的配置来选择对应的ddr_model文件，官方所给的例程（vivado 2018.2）里面有一个import文件夹，里面包含了所需要的model文件和头文件，
根据ddr_ex例程里面的sim_top中的DDR设置和ddr_model，自己组合了一个sdramddr4文件，然后仿真时直接调用测试读写，结果正确。

小坑：
1.异步FIFO复位，需要一定时间来复位读端口的empty信号，可能在写进几个数后，FIFO_empty才会置低；
2.时钟上升沿检测时，对于条件判断语句中的触发条件的取值是根据边沿变化的最终值决定，即1->0和0->1取值是0和1；
3.在判断语句中中，用wire型作为转移条件时，当前态和未来态同时变化，当用reg型作为转移条件时，会有一个时钟的延迟；
4.Axi接口调用ddr中wready信号与arvalid信号有关；
5.传输途中weady信号会变低一段时间（原因不明）；（解决方案：可以采用外部输入地址的情况，类似于外部输入的数据，利用两个异步FIFO来分别写地址和数据，之后总体仿真出现问题后再修改）
6.输出的信号相较时钟信号有100ps的延迟，可以模仿例程中的#（TCQ = 100）来消除时钟延时。